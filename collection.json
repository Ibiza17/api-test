{
	"info": {
		"_postman_id": "aee9d7bd-6ce0-460e-adb2-1209413981d1",
		"name": "ultra-io-test-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17859438"
	},
	"item": [
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "post create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"userId\", jsonData.id);",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201)",
							"})",
							"pm.test(\"Response contains the created email address\", function() {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.email).to.include(postman.getEnvironmentVariable(\"email\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"David test1\",\"email\":\"{{email}}\",\"gender\":\"male\",\"status\":\"active\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify user created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"pm.test(\"Response contains the created email address\", function() {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.email).to.include(postman.getEnvironmentVariable(\"email\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"pm.test(\"Response contains of update email address\", function() {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.email).to.include(postman.getEnvironmentVariable(\"email2\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"David test1\",\n    \"email\": \"{{email2}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify user updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "search for deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user without auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function() {",
							"    pm.response.to.have.status(401)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"David test\",\"email\":\"david11@test.com\",\"gender\":\"male\",\"status\":\"active\"}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "50308009a556d3f73c3fcc87e3fa5a4b45fc3a4162e00f4adec8b0c89e9cbda3",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}